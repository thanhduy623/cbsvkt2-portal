import { connectGAS } from './connectGAS.js';
import { Loading } from './loading.js';

document.addEventListener("DOMContentLoaded", () => {
    setUpGetReportButton();
});

async function setUpGetReportButton() {
    const form = document.getElementById("baoCaoNhapForm");
    if (!form) return console.error("‚ùå Form kh√¥ng t·ªìn t·∫°i");

    // T·∫°o container hi·ªÉn th·ªã d·ªØ li·ªáu
    let reportContainer = document.createElement("div");
    reportContainer.id = "reportContainer";
    reportContainer.style.marginTop = "20px";
    form.insertAdjacentElement("afterend", reportContainer);

    form.addEventListener("submit", async (event) => {
        event.preventDefault();

        const baoCaoNam = form.querySelector("#baoCaoNam").value.trim();
        const baoCaoThang = form.querySelector("#baoCaoThang").value.trim();
        const toDang = form.querySelector("#toDang").value.trim();
        const passCode = form.querySelector("#passCode").value.trim();

        if (!baoCaoNam || !baoCaoThang || !toDang || !passCode) {
            alert("‚ùå Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin");
            return;
        }

        Loading.show();

        try {
            // X√ìA B·∫¢NG C≈® n·∫øu c√≥
            reportContainer.innerHTML = "";

            const resMembers = await connectGAS("getMemberList", {});
            if (!resMembers.success) throw new Error("‚ùå L·∫•y danh s√°ch Chi b·ªô th·∫•t b·∫°i");
            let members = resMembers.data;

            members = members.filter(m => m.toDang === toDang);

            const data = { baoCaoNam, baoCaoThang, toDang, passCode };
            const resReports = await connectGAS("getReport", data);

            let reports = [];
            if (resReports.success && Array.isArray(resReports.data)) {
                reports = resReports.data;
            }

            const finalData = members.map(member => {
                const mssv = String(member.MSSV).trim();
                const report = reports.find(r =>
                    String(r.maSinhVien).trim() === mssv &&
                    String(r.baoCaoThang).trim() === baoCaoThang &&
                    String(r.baoCaoNam).trim() === baoCaoNam
                ) || {};

                return {
                    hoTen: member.HO_TEN,
                    maSinhVien: mssv,
                    toDang: member.toDang,
                    ...report,
                    status: report.maSinhVien ? "ƒê√£ b√°o c√°o" : "Ch∆∞a th·ª±c hi·ªán b√°o c√°o"
                };
            });

            displayReport(finalData, reportContainer);

        } catch (err) {
            console.error(err);
            alert(err.message || "‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi server!");
            reportContainer.innerHTML = "";
        } finally {
            Loading.hide();
        }
    });
}

function displayReport(data, container) {
    // Reset container
    container.innerHTML = "";

    if (!data || data.length === 0) {
        container.innerHTML = "<p>Kh√¥ng c√≥ d·ªØ li·ªáu b√°o c√°o.</p>";
        return;
    }

    let html = `
        <h2>D·ªÆ LI·ªÜU T·ªîNG H·ª¢P</h2>
        ${generateSummary(data)}
        <table border="1" cellpadding="5" cellspacing="0" 
               style="width:100%; border-collapse: collapse;">
            <thead>
                <tr>
                    <th>STT</th>
                    <th>H·ªç v√† t√™n</th>
                    <th>T∆∞ t∆∞·ªüng, ch√≠nh tr·ªã</th>
                    <th>T√¨nh h√¨nh r√®n luy·ªán</th>
                    <th>K·∫øt qu·∫£ h·ªçc t·∫≠p</th>
                </tr>
            </thead>
            <tbody>
                ${data.map((row, index) => {
        if (!row.maSinhVien || row.status === "Ch∆∞a th·ª±c hi·ªán b√°o c√°o") {
            return `
                <tr style="cursor:pointer;">
                    <td>${index + 1}</td>
                    <td>
                        <strong>${row.hoTen || ""}</strong><br>
                        MSSV: ${row.maSinhVien || ""}<br>
                        Ph√¢n lo·∫°i: ${row.dangVien || ""}
                    </td>
                    <td colspan="3" style="text-align:center; color:red;">
                        Ch∆∞a b√°o c√°o
                    </td>
                </tr>
            `;
        }
        return `
            <tr style="cursor:pointer;">
                <td>${index + 1}</td>
                <td>
                    <strong>${row.hoTen || ""}</strong><br>
                    MSSV: ${row.maSinhVien || ""}<br>
                    Ph√¢n lo·∫°i: ${row.dangVien || ""} ${row.thamGiaSinhHoatCB === "Kh√¥ng th·ªÉ tham gia" ? '<span style="color:red;"> - Xin v·∫Øng</span>' : ""}
                </td>
                <td>
                    - T·ª± di·ªÖn bi·∫øn, t·ª± chuy·ªÉn h√≥a: ${row.dienBienChuyenHoa || ""}<br>
                    - Suy tho√°i t∆∞ t∆∞·ªüng ch√≠nh tr·ªã: ${row.suyThoaiChinhTri || ""}
                </td>
                <td>
                    - ƒêi·ªÉm r√®n luy·ªán hi·ªán t·∫°i: <strong>${row.renluyen || ""}</strong><br>
                    - Vi ph·∫°m n·ªôi quy: ${row.viPhamNoiQuy || ""}<br>
                    - Vi ph·∫°m ph√°p lu·∫≠t: ${row.viPhamPhapLuat || ""}<br>
                    - D·ªØ li·ªáu h·ªçc k·ª≥: ${row.hocKy || ""}
                </td>
                <td>
                    - T·ªïng k·∫øt h·ªçc k·ª≥: <strong>${row.tongKetHocKy || ""}</strong><br>
                    - T·ª± ƒë√°nh gi√°: ${row.tuDanhGiaHocTap || ""}<br>
                    - D·ªØ li·ªáu h·ªçc k·ª≥: ${row.hocKy || ""}
                </td>
            </tr>
        `;
    }).join("")}
            </tbody>
        </table>
    `;

    container.innerHTML = html;

    // G·∫Øn s·ª± ki·ªán click chi ti·∫øt (ch·ªâ nh·ªØng d√≤ng c√≥ b√°o c√°o)
    container.querySelectorAll("tbody tr").forEach((tr, index) => {
        if (data[index].status === "ƒê√£ b√°o c√°o") {
            tr.addEventListener("click", () => showDetail(data[index]));
        }
    });
}


function parseBangDiem(str) {
    if (!str || typeof str !== "string") return [];

    const items = str.match(/\{.*?\}/g);
    if (!items) return [];

    return items.map(s => {
        const obj = {};
        s.replace(/[{}]/g, "") // b·ªè { }
            .split(",")
            .forEach(pair => {
                let [key, value] = pair.split("=");
                key = key.trim();
                value = value.trim();
                if (value === "null") value = "";
                obj[key] = value;
            });
        return obj;
    });
}

let detailWindow = null; // bi·∫øn to√†n c·ª•c ƒë·ªÉ l∆∞u popup

function showDetail(item) {
    // Parse b·∫£ng ƒëi·ªÉm
    const diem = parseBangDiem(item.bangDiemHocTap);

    let bangDiemHTML = "";
    if (diem.length > 0) {
        bangDiemHTML = `
            <table border="1" cellpadding="5" cellspacing="0" 
                   style="border-collapse: collapse; width:100%; margin-top:10px;">
                <thead>
                    <tr style="background:#f2f2f2;">
                        <th>M√¥n h·ªçc</th>
                        <th>Gi·ªØa k·ª≥</th>
                        <th>Cu·ªëi k·ª≥</th>
                        <th>GPA / T·ªïng k·∫øt</th>
                    </tr>
                </thead>
                <tbody>
                    ${diem.map(d => `
                        <tr>
                            <td>${d.ten || ""}</td>
                            <td>${d.giuaKy || ""}</td>
                            <td>${d.cuoiKy || ""}</td>
                            <td>${d.gpa || ""}</td>
                        </tr>
                    `).join("")}
                </tbody>
            </table>
        `;
    } else {
        bangDiemHTML = "<p>Kh√¥ng c√≥ b·∫£ng ƒëi·ªÉm</p>";
    }

    // N·ªôi dung chi ti·∫øt
    const detailHTML = `
        <h2>üìå Chi ti·∫øt b√°o c√°o</h2>
        <p>
        <strong>H·ªç t√™n:</strong> ${item.hoTen || ""} (${item.maSinhVien || ""})
        ${item.thamGiaSinhHoatCB === "Kh√¥ng th·ªÉ tham gia" ? '<span style="color:red;"> ‚Äì Xin v·∫Øng</span>' : ""}

        </p>
        <p><strong>NƒÉm b√°o c√°o:</strong> ${item.baoCaoNam || ""} - 
        <strong>Th√°ng:</strong> ${item.baoCaoThang || ""}</p>
        <p><strong>ƒê·∫£ng vi√™n:</strong> ${item.dangVien || ""}</p>
        <p><strong>T·ªï ƒê·∫£ng:</strong> ${item.toDang || ""}</p>
        <p><strong>H·ªçc k·ª≥:</strong> ${item.hocKy || ""} - <strong>NƒÉm h·ªçc:</strong> ${item.namHoc || ""}</p>
        <hr>

        <h3>T∆∞ t∆∞·ªüng, ch√≠nh tr·ªã</h3>
        <p>- T·ª± di·ªÖn bi·∫øn, t·ª± chuy·ªÉn h√≥a: ${item.dienBienChuyenHoa || ""}</p>
        <p>- Suy tho√°i t∆∞ t∆∞·ªüng ch√≠nh tr·ªã: ${item.suyThoaiChinhTri || ""}</p>
        <p>Nh·∫≠n x√©t l·∫≠p tr∆∞·ªùng: ${item.nhanXetLapTruong.trim() || ""}</p>            
        </div>
        <hr>

        <h3>R√®n luy·ªán</h3>
        <p>- ƒêi·ªÉm r√®n luy·ªán hi·ªán t·∫°i: <strong>${item.renluyen || ""}</strong></p>
        <p>- Vi ph·∫°m n·ªôi quy: ${item.viPhamNoiQuy || ""}</p>
        <p>- Vi ph·∫°m ph√°p lu·∫≠t: ${item.viPhamPhapLuat || ""}</p>
        <p>Nh·∫≠n x√©t r√®n luy·ªán: ${item.nhanXetRenLuyen.trim() || ""}</p>
        <hr>

        <h3>H·ªçc t·∫≠p</h3>
        <p>- T·ª± ƒë√°nh gi√°: ${item.tuDanhGiaHocTap || ""}</p>
        <p>- T·ªïng k·∫øt h·ªçc k·ª≥: ${item.tongKetHocKy || ""}</p>
        <p>Nh·∫≠n x√©t h·ªçc t·∫≠p: ${item.nhanXetHocTap.trim() || ""}</p>
        <hr>

        <h3>B·∫£ng ƒëi·ªÉm chi ti·∫øt</h3>
        ${bangDiemHTML}

        ${item.thamGiaSinhHoatCB === "Kh√¥ng th·ªÉ tham gia" ? `
            <h3>Xin v·∫Øng sinh ho·∫°t</h3>
            <p>- Tham gia sinh ho·∫°t chi b·ªô: ${item.thamGiaSinhHoatCB || ""}</p>
            <p>- Mail xin v·∫Øng: ${item.mailXinVang || ""}</p>
            <p>- B√°o xin v·∫Øng: ${item.baoXinVang || ""}</p>
            <p>- L√Ω do xin v·∫Øng: ${item.lyDoXinVang || ""}</p>
            <p>- ƒê∆°n xin v·∫Øng: ${item.donXinVang ? `<a href="${item.donXinVang}" target="_blank">Xem file</a>` : ""}</p>
        ` : ""}

    `;



    // N·∫øu tab ch∆∞a m·ªü ho·∫∑c ƒë√£ ƒë√≥ng ‚Üí m·ªü m·ªõi
    if (!detailWindow || detailWindow.closed) {
        detailWindow = window.open("", "_blank"); // m·ªü tab m·ªõi
    }

    // Ghi ƒë√® n·ªôi dung tab
    detailWindow.document.open();
    detailWindow.document.write(`
        <html>
        <head>
            <title>Chi ti·∫øt b√°o c√°o</title>
            <style>
                body { font-family: Arial, sans-serif; padding: 20px; line-height: 1.6; }
                h2 { margin-bottom: 10px; }
                h3 { margin-top: 20px; }
                table { margin-top: 10px; border-collapse: collapse; width: 100%; }
                td, th { text-align: center; padding: 5px; border: 1px solid #ddd; }
                th { background: #f2f2f2; }
            </style>
        </head>
        <body>
            ${detailHTML}
        </body>
        </html>
    `);
    detailWindow.document.close();
}


function generateSummary(data) {
    if (!Array.isArray(data) || data.length === 0) return "";

    // Helper: chuy·ªÉn chu·ªói th√†nh s·ªë
    function toNumber(val) {
        if (!val) return NaN;
        let n = parseFloat(val.toString().replace(",", "."));
        return isNaN(n) ? NaN : n;
    }

    const tongBaoCao = data.filter(d => d.status === "ƒê√£ b√°o c√°o").length;

    // 1. ƒê·∫£ng vi√™n
    const tongDangVien = data.filter(d => d.dangVien).length;
    const dangVienChinhThuc = data.filter(d => String(d.dangVien).toLowerCase().includes("ch√≠nh th·ª©c")).length;
    const dangVienDuBi = data.filter(d => String(d.dangVien).toLowerCase().includes("d·ª± b·ªã")).length;

    // 2. B√°o c√°o
    const soDaBaoCao = tongBaoCao;
    const soChuaBaoCao = data.length - soDaBaoCao;
    const soXinVang = data.filter(d => d.donXinVang || d.baoXinVang).length;

    // 3. T∆∞ t∆∞·ªüng, ch√≠nh tr·ªã
    const dienBien = data.filter(d => String(d.dienBienChuyenHoa).trim() === "C√≥");
    const suyThoai = data.filter(d => String(d.suyThoaiChinhTri).trim() === "C√≥");

    const viPhamNoiQuy = data.filter(d => String(d.viPhamNoiQuy).trim() === "C√≥");
    const viPhamPhapLuat = data.filter(d => String(d.viPhamPhapLuat).trim() === "C√≥");

    // 4. ƒêi·ªÉm r√®n luy·ªán
    const renLuyenScores = data.map(d => toNumber(d.renluyen)).filter(v => !isNaN(v));
    const renLuyenMin = renLuyenScores.length ? Math.min(...renLuyenScores) : "‚Äì";
    const renLuyenMax = renLuyenScores.length ? Math.max(...renLuyenScores) : "‚Äì";
    const renLuyenAvg = renLuyenScores.length ? (renLuyenScores.reduce((a, b) => a + b, 0) / renLuyenScores.length).toFixed(2) : "‚Äì";

    // 5. ƒêi·ªÉm h·ªçc t·∫≠p
    const hocTapScores = data
        .map(d => toNumber(d.tongKetHocKy) || toNumber(d.tuDanhGiaHocTap))
        .filter(v => !isNaN(v));
    const hocTapMin = hocTapScores.length ? Math.min(...hocTapScores) : "‚Äì";
    const hocTapMax = hocTapScores.length ? Math.max(...hocTapScores) : "‚Äì";
    const hocTapAvg = hocTapScores.length ? (hocTapScores.reduce((a, b) => a + b, 0) / hocTapScores.length).toFixed(2) : "‚Äì";

    return `
        <div style="
            margin:20px 0; 
            padding:20px; 
            border:2px solid #444; 
            border-radius:10px; 
            font-size:15px;
        ">
            <h3 style="margin-top:0; text-align:center; font-size:20px; font-weight:bold;">üìä TH·ªêNG K√ä T·ªîNG H·ª¢P</h3>

            <div style="display:flex; flex-wrap:wrap; gap:15px; margin-top:10px;">
                
                <div style="flex:1; min-width:250px; padding:12px; border:1px solid #ccc; border-radius:8px; background:#fff;">
                    <h4 style="font-size:16px; font-weight:bold; color:#2c3e50;">üë• ƒê·∫£ng vi√™n</h4>
                    <p>- T·ªïng s·ªë: ${tongDangVien}</p>
                    <p>- Ch√≠nh th·ª©c: ${dangVienChinhThuc}</p>
                    <p>- D·ª± b·ªã: ${dangVienDuBi}</p>
                </div>

                <div style="flex:1; min-width:250px; padding:12px; border:1px solid #ccc; border-radius:8px; background:#fff;">
                    <h4 style="font-size:16px; font-weight:bold; color:#2c3e50;">üìë B√°o c√°o</h4>
                    <p>- ƒê√£ b√°o c√°o: ${soDaBaoCao}</p>
                    <p>- Ch∆∞a b√°o c√°o: ${soChuaBaoCao}</p>
                    <p>- Xin v·∫Øng: ${soXinVang}</p>
                </div>

                <div style="flex:1; min-width:250px; padding:12px; border:1px solid #ccc; border-radius:8px; background:#fff;">
                    <h4 style="font-size:16px; font-weight:bold; color:#2c3e50;">üß† T∆∞ t∆∞·ªüng ch√≠nh tr·ªã</h4>
                    <p style="color:${(dienBien.length + suyThoai.length) !== 0 ? 'red' : 'inherit'};">
                        - T∆∞ t∆∞·ªüng giao ƒë·ªông: ${dienBien.length + suyThoai.length} / ${tongBaoCao}
                    </p>
                    <p style="color:${viPhamNoiQuy.length !== 0 ? 'red' : 'inherit'};">
                        - Vi ph·∫°m n·ªôi quy: ${viPhamNoiQuy.length} / ${tongBaoCao}
                    </p>
                    <p style="color:${viPhamPhapLuat.length !== 0 ? 'red' : 'inherit'};">
                        - Vi ph·∫°m ph√°p lu·∫≠t: ${viPhamPhapLuat.length} / ${tongBaoCao}
                    </p>
                </div>
                                    
                <div style="flex:1; min-width:250px; padding:12px; border:1px solid #ccc; border-radius:8px; background:#fff;">
                    <h4 style="font-size:16px; font-weight:bold; color:#2c3e50;">üí™ R√®n luy·ªán</h4>
                    <p>- Th·∫•p nh·∫•t: ${renLuyenMin}</p>
                    <p>- Cao nh·∫•t: ${renLuyenMax}</p>
                    <p>- Trung b√¨nh: ${renLuyenAvg}</p>
                </div>

                <div style="flex:1; min-width:250px; padding:12px; border:1px solid #ccc; border-radius:8px; background:#fff;">
                    <h4 style="font-size:16px; font-weight:bold; color:#2c3e50;">üìö H·ªçc t·∫≠p</h4>
                    <p>- Th·∫•p nh·∫•t: ${hocTapMin}</p>
                    <p>- Cao nh·∫•t: ${hocTapMax}</p>
                    <p>- Trung b√¨nh: ${hocTapAvg}</p>
                </div>

            </div>
        </div>
    `;
}

